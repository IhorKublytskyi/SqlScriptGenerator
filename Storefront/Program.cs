using Storefront.Middlewares;
using Storefront.Clients;
using Storefront.Validators;
using GenerationService.GrpcAutogenerated;
using ScriptFileBuilders.GrpcAutogenerated;
using Storefront.Api;

var builder = WebApplication.CreateBuilder(args);
var configuration = builder.Configuration;

builder.Services.AddScoped<ScriptGenerationHistoriesClient>();
builder.Services.AddScoped<ScriptGenerationServiceClient>();
builder.Services.AddScoped<BuildRequestValidator>();
builder.Services.AddScoped<HistoryQueryParametersValidator>();

builder.Services.AddGrpcClient<ScriptFileBuilder.ScriptFileBuilderClient>(options =>
{
    options.Address = new Uri(configuration.GetValue<string>("ApiServiceUrl") ?? "https://localhost:7088");
}).ConfigureChannel(options =>
    {
        options.MaxReceiveMessageSize = int.MaxValue;
        options.MaxSendMessageSize = int.MaxValue;
    });

builder.Services.AddGrpcClient<ScriptGenerationHistoriesServiceProto.ScriptGenerationHistoriesServiceProtoClient>(options =>
{
    options.Address = new Uri(configuration.GetValue<string>("ApiServiceUrl") ?? "https://localhost:7088");
});

builder.AddServiceDefaults();

var app = builder.Build();

app.MapDefaultEndpoints();

app.UseScriptsEndpoints();

app.UseMiddleware<ExceptionHandlingMiddleware>();

app.Run();
