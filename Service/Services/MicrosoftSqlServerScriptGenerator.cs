using Bogus;
using Service.Interfaces;
using Service.Models;
using System.Text;
using Service.GrpcAutoGenerated;



namespace Service.Services
{
    public class MicrosoftSqlServerScriptGenerator : IScriptGenerator
    {
        public DatabaseDialect Dialect => DatabaseDialect.MicrosoftSqlServer;
        public string Generate(int quantity)
        {
            var script = new StringBuilder();
            var faker = new Faker<MockUser>();
            faker.RuleFor(u => u.Firstname, f => f.Name.FirstName())
                 .RuleFor(u => u.Lastname, f => f.Name.LastName())
                 .RuleFor(u => u.Email, f => f.Internet.Email())
                 .RuleFor(u => u.Password, f => f.Internet.Password())
                 .RuleFor(u => u.BirthDate, f => f.Person.DateOfBirth)
                 .RuleFor(u => u.PhoneNumber, f => f.Phone.PhoneNumberFormat());

            script.AppendLine(@"
                CREATE TABLE FakeUsers(
                    Id INT IDENTITY(1,1) PRIMARY KEY, 
                    Firstname NVARCHAR(255), 
                    Lastname NVARCHAR(255), 
                    Email NVARCHAR(255), 
                    PasswordHash NVARCHAR(255), 
                    BirthDate DATETIME, 
                    PhoneNumber NVARCHAR(12));

                INSERT INTO FakeUsers(Firstname, Lastname, Email, PasswordHash, BirthDate, PhoneNumber) VALUES");

            for (int i = 0; i < quantity; i++)
            {
                var user = faker.Generate();
                string firstName = user.Firstname.Replace('\'', ' ');
                string lastName = user.Lastname.Replace('\'', ' ');
                string birthDate = user.BirthDate.ToString("yyyy-MM-dd");

                script.Append($"(" +
                    $"'{firstName}', " +
                    $"'{lastName}', " +
                    $"'{user.Email}', " +
                    $"'{user.Password}', " +
                    $"'{birthDate}', " +
                    $"'{user.PhoneNumber}')");

                if (i != quantity - 1)
                    script.Append(',');
            }
            script.Append(";");

            return script.ToString();
        }
    }
}
