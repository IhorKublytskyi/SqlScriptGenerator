using Service.Interfaces;
using Service.Services;
using Service.GrpcAutoGenerated;
using Service.Models;

var builder = WebApplication.CreateBuilder(args);
var configuration = builder.Configuration;


builder.AddServiceDefaults();
builder.Services.AddGrpc(options =>
{
    options.MaxSendMessageSize = int.MaxValue;
    options.EnableDetailedErrors = true;
});
builder.Services.AddGrpcClient<ScriptGenerationHistoryRepository.ScriptGenerationHistoryRepositoryClient>(options => 
{
    options.Address = new Uri(configuration.GetValue<string>("DataProviderUrl") ?? "https://localhost:7196");
});

builder.Services.AddScoped<IScriptGenerator, PostgresScriptGenerator>();
builder.Services.AddScoped<IScriptGenerator, MicrosoftSqlServerScriptGenerator>();
builder.Services.AddScoped<IScriptGeneratorFactory, ScriptGeneratorFactory>();

var app = builder.Build();

app.MapDefaultEndpoints();
app.MapGrpcService<ScriptGenerationHistoriesServiceImpl>();
app.MapGrpcService<ScriptGenerationServiceImpl>();
app.Run();
